{
  "info": {
    "name": "Cart Service API Collection",
    "description": "Complete API collection for Cart Service microservice",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8083",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "1",
      "type": "string"
    },
    {
      "key": "product_id",
      "value": "1",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"user@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Login to get JWT token for user role"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('jwt_token', response.token);",
                  "    pm.collectionVariables.set('user_id', response.userId);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin@example.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Login to get JWT token for admin role"
          }
        }
      ]
    },
    {
      "name": "Cart Operations",
      "item": [
        {
          "name": "Get Cart",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/cart?userId={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["cart"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                }
              ]
            },
            "description": "Retrieve all items in the user's cart"
          }
        },
        {
          "name": "Add Product to Cart",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": {{product_id}},\n  \"quantity\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/cart/add?userId={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["cart", "add"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                }
              ]
            },
            "description": "Add a product to the cart after checking availability"
          }
        },
        {
          "name": "Add Another Product to Cart",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": 2,\n  \"quantity\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/cart/add?userId={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["cart", "add"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                }
              ]
            },
            "description": "Add another product to test multiple items"
          }
        },
        {
          "name": "Update Product Quantity",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": {{product_id}},\n  \"quantity\": 3\n}"
            },
            "url": {
              "raw": "{{base_url}}/cart/add?userId={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["cart", "add"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                }
              ]
            },
            "description": "Update quantity of existing product in cart"
          }
        },
        {
          "name": "Remove Product from Cart",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/cart/remove/{{product_id}}?userId={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["cart", "remove", "{{product_id}}"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                }
              ]
            },
            "description": "Remove a specific product from the cart"
          }
        },
        {
          "name": "Clear Cart",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/cart/clear?userId={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["cart", "clear"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                }
              ]
            },
            "description": "Clear all items from the cart"
          }
        },
        {
          "name": "Checkout Cart",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/cart/checkout?userId={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["cart", "checkout"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                }
              ]
            },
            "description": "Process checkout by creating an order"
          }
        }
      ]
    },
    {
      "name": "Admin Operations",
      "item": [
        {
          "name": "Admin - View User Cart",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/cart?userId=2",
              "host": ["{{base_url}}"],
              "path": ["cart"],
              "query": [
                {
                  "key": "userId",
                  "value": "2"
                }
              ]
            },
            "description": "Admin viewing another user's cart"
          }
        },
        {
          "name": "Admin - Try to Add to Cart (Should Fail)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": {{product_id}},\n  \"quantity\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/cart/add?userId=2",
              "host": ["{{base_url}}"],
              "path": ["cart", "add"],
              "query": [
                {
                  "key": "userId",
                  "value": "2"
                }
              ]
            },
            "description": "Admin trying to add to another user's cart (should return 403)"
          }
        }
      ]
    },
    {
      "name": "Error Scenarios",
      "item": [
        {
          "name": "Add Invalid Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": 99999,\n  \"quantity\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/cart/add?userId={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["cart", "add"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                }
              ]
            },
            "description": "Try to add non-existent product"
          }
        },
        {
          "name": "Add Product with Invalid Quantity",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": {{product_id}},\n  \"quantity\": 0\n}"
            },
            "url": {
              "raw": "{{base_url}}/cart/add?userId={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["cart", "add"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                }
              ]
            },
            "description": "Try to add product with invalid quantity"
          }
        },
        {
          "name": "Get Non-existent Cart",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/cart?userId=99999",
              "host": ["{{base_url}}"],
              "path": ["cart"],
              "query": [
                {
                  "key": "userId",
                  "value": "99999"
                }
              ]
            },
            "description": "Try to get cart for non-existent user"
          }
        },
        {
          "name": "Checkout Empty Cart",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/cart/checkout?userId={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["cart", "checkout"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                }
              ]
            },
            "description": "Try to checkout empty cart"
          }
        },
        {
          "name": "Unauthorized Access",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/cart?userId={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["cart"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{user_id}}"
                }
              ]
            },
            "description": "Try to access cart without authentication"
          }
        }
      ]
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Service Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/actuator/health",
              "host": ["{{base_url}}"],
              "path": ["actuator", "health"]
            },
            "description": "Check service health status"
          }
        },
        {
          "name": "Service Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/actuator/info",
              "host": ["{{base_url}}"],
              "path": ["actuator", "info"]
            },
            "description": "Get service information"
          }
        }
      ]
    }
  ]
}
